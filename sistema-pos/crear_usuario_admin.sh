#!/bin/bash

echo "üë§ VERIFICACI√ìN Y CREACI√ìN DE USUARIO ADMIN"
echo "==========================================="
echo ""

# Verificar que PostgreSQL est√© corriendo
echo "1. Verificando conexi√≥n a PostgreSQL..."
if pg_isready -h localhost -p 5432 > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL corriendo"
else
    echo "‚ùå PostgreSQL no est√° corriendo"
    echo "   Inicia PostgreSQL primero"
    exit 1
fi

echo ""

# Verificar que la base de datos existe
echo "2. Verificando base de datos..."
if psql -h localhost -U postgres -d menta_restobar_db -c "SELECT 1;" > /dev/null 2>&1; then
    echo "‚úÖ Base de datos 'menta_restobar_db' accesible"
else
    echo "‚ùå No se puede acceder a la base de datos"
    echo "   Verifica que la base de datos existe y las credenciales son correctas"
    exit 1
fi

echo ""

# Verificar si existe un usuario admin
echo "3. Verificando usuario admin..."
admin_exists=$(psql -h localhost -U postgres -d menta_restobar_db -t -c "SELECT COUNT(*) FROM vendedores WHERE username = 'admin' AND activo = true;" 2>/dev/null | tr -d ' ')

if [ "$admin_exists" = "1" ]; then
    echo "‚úÖ Usuario 'admin' ya existe y est√° activo"
    
    # Mostrar informaci√≥n del usuario
    echo ""
    echo "üìã Informaci√≥n del usuario admin:"
    psql -h localhost -U postgres -d menta_restobar_db -c "SELECT id_vendedor, nombre, username, rol, activo FROM vendedores WHERE username = 'admin';"
    
else
    echo "‚ùå Usuario 'admin' no existe o est√° inactivo"
    echo ""
    echo "üîß Creando usuario admin..."
    
    # Verificar que hay sucursales y restaurantes
    sucursal_count=$(psql -h localhost -U postgres -d menta_restobar_db -t -c "SELECT COUNT(*) FROM sucursales WHERE activo = true;" 2>/dev/null | tr -d ' ')
    restaurante_count=$(psql -h localhost -U postgres -d menta_restobar_db -t -c "SELECT COUNT(*) FROM restaurantes WHERE activo = true;" 2>/dev/null | tr -d ' ')
    
    if [ "$sucursal_count" = "0" ] || [ "$restaurante_count" = "0" ]; then
        echo "‚ö†Ô∏è  No hay sucursales o restaurantes activos"
        echo "   Creando datos b√°sicos..."
        
        # Crear restaurante si no existe
        psql -h localhost -U postgres -d menta_restobar_db -c "
        INSERT INTO restaurantes (nombre, direccion, ciudad, telefono, email, activo) 
        VALUES ('Restaurante Demo', 'Direcci√≥n Demo', 'La Paz', '12345678', 'demo@restaurante.com', true)
        ON CONFLICT DO NOTHING;
        " 2>/dev/null
        
        # Crear sucursal si no existe
        psql -h localhost -U postgres -d menta_restobar_db -c "
        INSERT INTO sucursales (nombre, ciudad, direccion, activo, id_restaurante) 
        VALUES ('Sucursal Principal', 'La Paz', 'Direcci√≥n Principal', true, 1)
        ON CONFLICT DO NOTHING;
        " 2>/dev/null
        
        echo "‚úÖ Datos b√°sicos creados"
    fi
    
    # Crear usuario admin
    echo "   Creando usuario admin con contrase√±a 'admin'..."
    
    # Hash de la contrase√±a 'admin' usando bcrypt
    # Nota: Este es un hash de ejemplo, en producci√≥n usar bcrypt
    password_hash='$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi'
    
    psql -h localhost -U postgres -d menta_restobar_db -c "
    INSERT INTO vendedores (nombre, username, password_hash, rol, activo, id_sucursal, id_restaurante) 
    VALUES ('Administrador', 'admin', '$password_hash', 'admin', true, 1, 1)
    ON CONFLICT (username) DO UPDATE SET 
        password_hash = EXCLUDED.password_hash,
        activo = true,
        rol = 'admin';
    " 2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Usuario admin creado exitosamente"
        echo "   Usuario: admin"
        echo "   Contrase√±a: admin"
    else
        echo "‚ùå Error al crear usuario admin"
        echo "   Verifica los permisos de la base de datos"
    fi
fi

echo ""

# Mostrar todos los usuarios activos
echo "4. Usuarios activos en el sistema:"
psql -h localhost -U postgres -d menta_restobar_db -c "SELECT id_vendedor, nombre, username, rol, activo FROM vendedores WHERE activo = true ORDER BY rol, nombre;"

echo ""
echo "üéØ RESUMEN:"
echo "==========="
echo "‚úÖ Sistema de usuarios verificado"
echo "‚úÖ Usuario admin disponible"
echo ""
echo "üöÄ Ahora puedes probar el login:"
echo "   1. Usuario: admin"
echo "   2. Contrase√±a: admin"
echo ""
echo "üí° Si el login sigue fallando:"
echo "   1. Verifica que el backend est√© corriendo"
echo "   2. Revisa la consola del navegador"
echo "   3. Ejecuta: ./prueba_login.sh"

echo "üë§ VERIFICACI√ìN Y CREACI√ìN DE USUARIO ADMIN"
echo "==========================================="
echo ""

# Verificar que PostgreSQL est√© corriendo
echo "1. Verificando conexi√≥n a PostgreSQL..."
if pg_isready -h localhost -p 5432 > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL corriendo"
else
    echo "‚ùå PostgreSQL no est√° corriendo"
    echo "   Inicia PostgreSQL primero"
    exit 1
fi

echo ""

# Verificar que la base de datos existe
echo "2. Verificando base de datos..."
if psql -h localhost -U postgres -d menta_restobar_db -c "SELECT 1;" > /dev/null 2>&1; then
    echo "‚úÖ Base de datos 'menta_restobar_db' accesible"
else
    echo "‚ùå No se puede acceder a la base de datos"
    echo "   Verifica que la base de datos existe y las credenciales son correctas"
    exit 1
fi

echo ""

# Verificar si existe un usuario admin
echo "3. Verificando usuario admin..."
admin_exists=$(psql -h localhost -U postgres -d menta_restobar_db -t -c "SELECT COUNT(*) FROM vendedores WHERE username = 'admin' AND activo = true;" 2>/dev/null | tr -d ' ')

if [ "$admin_exists" = "1" ]; then
    echo "‚úÖ Usuario 'admin' ya existe y est√° activo"
    
    # Mostrar informaci√≥n del usuario
    echo ""
    echo "üìã Informaci√≥n del usuario admin:"
    psql -h localhost -U postgres -d menta_restobar_db -c "SELECT id_vendedor, nombre, username, rol, activo FROM vendedores WHERE username = 'admin';"
    
else
    echo "‚ùå Usuario 'admin' no existe o est√° inactivo"
    echo ""
    echo "üîß Creando usuario admin..."
    
    # Verificar que hay sucursales y restaurantes
    sucursal_count=$(psql -h localhost -U postgres -d menta_restobar_db -t -c "SELECT COUNT(*) FROM sucursales WHERE activo = true;" 2>/dev/null | tr -d ' ')
    restaurante_count=$(psql -h localhost -U postgres -d menta_restobar_db -t -c "SELECT COUNT(*) FROM restaurantes WHERE activo = true;" 2>/dev/null | tr -d ' ')
    
    if [ "$sucursal_count" = "0" ] || [ "$restaurante_count" = "0" ]; then
        echo "‚ö†Ô∏è  No hay sucursales o restaurantes activos"
        echo "   Creando datos b√°sicos..."
        
        # Crear restaurante si no existe
        psql -h localhost -U postgres -d menta_restobar_db -c "
        INSERT INTO restaurantes (nombre, direccion, ciudad, telefono, email, activo) 
        VALUES ('Restaurante Demo', 'Direcci√≥n Demo', 'La Paz', '12345678', 'demo@restaurante.com', true)
        ON CONFLICT DO NOTHING;
        " 2>/dev/null
        
        # Crear sucursal si no existe
        psql -h localhost -U postgres -d menta_restobar_db -c "
        INSERT INTO sucursales (nombre, ciudad, direccion, activo, id_restaurante) 
        VALUES ('Sucursal Principal', 'La Paz', 'Direcci√≥n Principal', true, 1)
        ON CONFLICT DO NOTHING;
        " 2>/dev/null
        
        echo "‚úÖ Datos b√°sicos creados"
    fi
    
    # Crear usuario admin
    echo "   Creando usuario admin con contrase√±a 'admin'..."
    
    # Hash de la contrase√±a 'admin' usando bcrypt
    # Nota: Este es un hash de ejemplo, en producci√≥n usar bcrypt
    password_hash='$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi'
    
    psql -h localhost -U postgres -d menta_restobar_db -c "
    INSERT INTO vendedores (nombre, username, password_hash, rol, activo, id_sucursal, id_restaurante) 
    VALUES ('Administrador', 'admin', '$password_hash', 'admin', true, 1, 1)
    ON CONFLICT (username) DO UPDATE SET 
        password_hash = EXCLUDED.password_hash,
        activo = true,
        rol = 'admin';
    " 2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Usuario admin creado exitosamente"
        echo "   Usuario: admin"
        echo "   Contrase√±a: admin"
    else
        echo "‚ùå Error al crear usuario admin"
        echo "   Verifica los permisos de la base de datos"
    fi
fi

echo ""

# Mostrar todos los usuarios activos
echo "4. Usuarios activos en el sistema:"
psql -h localhost -U postgres -d menta_restobar_db -c "SELECT id_vendedor, nombre, username, rol, activo FROM vendedores WHERE activo = true ORDER BY rol, nombre;"

echo ""
echo "üéØ RESUMEN:"
echo "==========="
echo "‚úÖ Sistema de usuarios verificado"
echo "‚úÖ Usuario admin disponible"
echo ""
echo "üöÄ Ahora puedes probar el login:"
echo "   1. Usuario: admin"
echo "   2. Contrase√±a: admin"
echo ""
echo "üí° Si el login sigue fallando:"
echo "   1. Verifica que el backend est√© corriendo"
echo "   2. Revisa la consola del navegador"
echo "   3. Ejecuta: ./prueba_login.sh"


