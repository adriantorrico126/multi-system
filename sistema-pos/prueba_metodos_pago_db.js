const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'sistempos',
  user: 'postgres',
  password: '6951230Anacleta'
});

async function pruebaMetodosPagoDB() {
  try {
    console.log('üß™ [PRUEBA] M√©todos de Pago desde Base de Datos');
    console.log('==============================================');

    // Obtener m√©todos de pago activos
    console.log('\nüí≥ M√âTODOS DE PAGO ACTIVOS:');
    const metodosQuery = `
      SELECT id_pago, descripcion, activo
      FROM metodos_pago 
      WHERE id_restaurante = 1 AND activo = true
      ORDER BY id_pago
    `;
    const metodosResult = await pool.query(metodosQuery);
    console.table(metodosResult.rows);

    // Filtrar m√©todos excluyendo "Pago Diferido"
    console.log('\nüí≥ M√âTODOS PARA MODAL (excluyendo Pago Diferido):');
    const metodosParaModal = metodosResult.rows.filter(metodo => 
      !metodo.descripcion.toLowerCase().includes('diferido')
    );
    console.table(metodosParaModal);

    // Simular la l√≥gica de iconos y colores
    console.log('\nüé® SIMULACI√ìN DE ICONOS Y COLORES:');
    metodosParaModal.forEach(metodo => {
      const desc = metodo.descripcion.toLowerCase();
      let icono = 'Wallet';
      let color = 'bg-orange-500 hover:bg-orange-600';
      
      if (desc.includes('efectivo')) {
        icono = 'Banknote';
        color = 'bg-green-500 hover:bg-green-600';
      } else if (desc.includes('tarjeta') || desc.includes('cr√©dito') || desc.includes('d√©bito')) {
        icono = 'CreditCard';
        color = 'bg-blue-500 hover:bg-blue-600';
      } else if (desc.includes('transferencia') || desc.includes('m√≥vil')) {
        icono = 'Smartphone';
        color = 'bg-purple-500 hover:bg-purple-600';
      }
      
      console.log(`‚Ä¢ ${metodo.descripcion} ‚Üí Icono: ${icono}, Color: ${color}`);
    });

    console.log('\n‚úÖ VERIFICACI√ìN COMPLETADA');
    console.log('\nüìù CONFIGURACI√ìN DEL MODAL:');
    console.log('‚Ä¢ Se cargan m√©todos desde la base de datos');
    console.log('‚Ä¢ Solo se muestran m√©todos activos');
    console.log('‚Ä¢ Se excluye "Pago Diferido"');
    console.log('‚Ä¢ Iconos y colores se asignan autom√°ticamente');
    console.log('‚Ä¢ Se env√≠a la descripci√≥n del m√©todo al backend');

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

pruebaMetodosPagoDB();

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'sistempos',
  user: 'postgres',
  password: '6951230Anacleta'
});

async function pruebaMetodosPagoDB() {
  try {
    console.log('üß™ [PRUEBA] M√©todos de Pago desde Base de Datos');
    console.log('==============================================');

    // Obtener m√©todos de pago activos
    console.log('\nüí≥ M√âTODOS DE PAGO ACTIVOS:');
    const metodosQuery = `
      SELECT id_pago, descripcion, activo
      FROM metodos_pago 
      WHERE id_restaurante = 1 AND activo = true
      ORDER BY id_pago
    `;
    const metodosResult = await pool.query(metodosQuery);
    console.table(metodosResult.rows);

    // Filtrar m√©todos excluyendo "Pago Diferido"
    console.log('\nüí≥ M√âTODOS PARA MODAL (excluyendo Pago Diferido):');
    const metodosParaModal = metodosResult.rows.filter(metodo => 
      !metodo.descripcion.toLowerCase().includes('diferido')
    );
    console.table(metodosParaModal);

    // Simular la l√≥gica de iconos y colores
    console.log('\nüé® SIMULACI√ìN DE ICONOS Y COLORES:');
    metodosParaModal.forEach(metodo => {
      const desc = metodo.descripcion.toLowerCase();
      let icono = 'Wallet';
      let color = 'bg-orange-500 hover:bg-orange-600';
      
      if (desc.includes('efectivo')) {
        icono = 'Banknote';
        color = 'bg-green-500 hover:bg-green-600';
      } else if (desc.includes('tarjeta') || desc.includes('cr√©dito') || desc.includes('d√©bito')) {
        icono = 'CreditCard';
        color = 'bg-blue-500 hover:bg-blue-600';
      } else if (desc.includes('transferencia') || desc.includes('m√≥vil')) {
        icono = 'Smartphone';
        color = 'bg-purple-500 hover:bg-purple-600';
      }
      
      console.log(`‚Ä¢ ${metodo.descripcion} ‚Üí Icono: ${icono}, Color: ${color}`);
    });

    console.log('\n‚úÖ VERIFICACI√ìN COMPLETADA');
    console.log('\nüìù CONFIGURACI√ìN DEL MODAL:');
    console.log('‚Ä¢ Se cargan m√©todos desde la base de datos');
    console.log('‚Ä¢ Solo se muestran m√©todos activos');
    console.log('‚Ä¢ Se excluye "Pago Diferido"');
    console.log('‚Ä¢ Iconos y colores se asignan autom√°ticamente');
    console.log('‚Ä¢ Se env√≠a la descripci√≥n del m√©todo al backend');

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

pruebaMetodosPagoDB();
